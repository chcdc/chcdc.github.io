<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Carlos Carvalho - DevOps</title><link href="https://blog.chcdc.com.br/" rel="alternate"></link><link href="https://blog.chcdc.com.br/feeds/devops.atom" rel="self"></link><id>https://blog.chcdc.com.br/</id><updated>2021-06-22T22:27:45-02:00</updated><subtitle>Yet Another Blog</subtitle><entry><title>Git Conceitos e Hist√≥ria</title><link href="https://blog.chcdc.com.br/posts/git-conceitos-e-historia" rel="alternate"></link><published>2021-06-22T22:27:45-02:00</published><updated>2021-06-22T22:27:45-02:00</updated><author><name>Carlos Carvalho</name></author><id>tag:blog.chcdc.com.br,2021-06-22:/posts/git-conceitos-e-historia</id><summary type="html">&lt;p&gt;Nesse post vamos falar um pouco sobre a hist√≥ria e os conceitos b√°sicos do GIT.&lt;/p&gt;
&lt;div class="toc"&gt;&lt;span class="toctitle"&gt;Indice:&lt;/span&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#historia"&gt;Historia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#como-funciona"&gt;Como Funciona&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#principais-caracteristicas"&gt;Principais Caracter√≠sticas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#os-tres-estados"&gt;Os tr√™s estados&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#workflow"&gt;Workflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#repositorios-locais"&gt;Reposit√≥rios Locais&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;h3 id="historia"&gt;Historia&lt;/h3&gt;
&lt;p&gt;O n√∫cleo (kernel) do Linux √© um projeto de c√≥digo aberto com um escopo bastante grande.&lt;/p&gt;
&lt;p&gt;Em 2002, o projeto do n√∫cleo ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;Nesse post vamos falar um pouco sobre a hist√≥ria e os conceitos b√°sicos do GIT.&lt;/p&gt;
&lt;div class="toc"&gt;&lt;span class="toctitle"&gt;Indice:&lt;/span&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#historia"&gt;Historia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#como-funciona"&gt;Como Funciona&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#principais-caracteristicas"&gt;Principais Caracter√≠sticas&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#os-tres-estados"&gt;Os tr√™s estados&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#workflow"&gt;Workflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#repositorios-locais"&gt;Reposit√≥rios Locais&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;h3 id="historia"&gt;Historia&lt;/h3&gt;
&lt;p&gt;O n√∫cleo (kernel) do Linux √© um projeto de c√≥digo aberto com um escopo bastante grande.&lt;/p&gt;
&lt;p&gt;Em 2002, o projeto do n√∫cleo do Linux come√ßou usar uma DVCS propriet√°ria chamada BitKeeper.&lt;/p&gt;
&lt;p&gt;Em 2005, a rela√ß√£o entre a comunidade que desenvolveu o n√∫cleo do Linux e a empresa que desenvolveu BitKeeper quebrou em peda√ßos, e a ferramenta passou a ser paga.&lt;/p&gt;
&lt;p&gt;Isto alertou a comunidade que desenvolvia o Linux (e especialmente Linus Torvalds, o criador do Linux) a desenvolver a sua pr√≥pria ferramenta baseada em li√ß√µes aprendidas ao usar o BitKeeper.&lt;/p&gt;
&lt;p&gt;Algumas metas do novo sistema era os seguintes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Velocidade&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Projeto simples&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Forte suporte para desenvolvimento n√£o-linear (milhares de ramos paralelos)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Completamente distribu√≠do&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Capaz de lidar com projetos grandes como o n√∫cleo o Linux com efici√™ncia (velocidade e tamanho dos dados)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Desde seu nascimento em 2005, Git evoluiu e amadureceu para ser f√°cil de usar e ainda reter essas qualidades iniciais.&lt;/p&gt;
&lt;p&gt;Ele √© incrivelmente r√°pido, √© muito eficiente com projetos grandes, e ele tem um incr√≠vel sistema de ramos para desenvolvimento n√£o linear&lt;/p&gt;
&lt;h3 id="como-funciona"&gt;Como Funciona&lt;/h3&gt;
&lt;p&gt;O Git considera que os dados s√£o como uma imagem do sistema de arquivos.&lt;/p&gt;
&lt;p&gt;Toda vez que voc√™ fizer um commit, ou salvar o estado de seu projeto no Git, ele basicamente tira uma foto de todos os seus arquivos e armazena uma refer√™ncia para esse conjunto de arquivos.&lt;/p&gt;
&lt;p&gt;Para ser eficiente, se os arquivos n√£o foram alterados, o Git n√£o armazena o arquivo novamente, apenas um link para o arquivo id√™ntico anterior j√° armazenado.
O Git trata seus dados mais como um fluxo do estado dos arquivos.&lt;/p&gt;
&lt;p&gt;&lt;img alt="git-snapshot" src="/images/snapshots-git.png"&gt;&lt;/p&gt;
&lt;h3 id="principais-caracteristicas"&gt;Principais Caracter√≠sticas&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;As opera√ß√µes s√£o locais&lt;/li&gt;
&lt;li&gt;Tem integridade checksum&lt;/li&gt;
&lt;li&gt;Geralmente s√≥ adiciona dados&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="os-tres-estados"&gt;Os tr√™s estados&lt;/h3&gt;
&lt;p&gt;O git tem tres estados principais que seus arquivos podem estar:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Committed&lt;/strong&gt;: Os dados est√£o armazenados de forma segura em seu banco de dados local.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Modified&lt;/strong&gt;: Significa que o arquivo foi alterado, mas ainda n√£o fez o commit no seu banco de dados.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Staged&lt;/strong&gt;: Significa que voc√™ marcou a vers√£o atual de um arquivo modificado para fazer parte do seu pr√≥ximo commit&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="workflow"&gt;Workflow&lt;/h3&gt;
&lt;p&gt;O fluxo de trabalho podemos descrever da seguinte forma:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Voc√™ modifica arquivos no seu diret√≥rio de trabalho&lt;/li&gt;
&lt;li&gt;Seleciona os arquivos, adicionando imagens deles √† sua area de trabalho&lt;/li&gt;
&lt;li&gt;Voc√™ faz o commit, que leva os arquivos como eles est√£o na sua √°rea de prepara√ß√£o e os armazena permanentemente no seu diret√≥rio Git.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Workflow GIT" src="/images/workflow-git.png"&gt;&lt;/p&gt;
&lt;h3 id="repositorios-locais"&gt;Reposit√≥rios Locais&lt;/h3&gt;
&lt;p&gt;Seus reposit√≥rios locais consistem em tr√™s "√°rvores" mantidas pelo git&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Working Directory&lt;/strong&gt; : Cont√©m os arquivos vigentes&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Index&lt;/strong&gt; : Funciona como uma √°rea tempor√°ria (stage)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HEAD&lt;/strong&gt; : Aponta para o ultimo commit feito&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="Workflow GIT Directories" src="/images/workflow-git-dir.png"&gt;&lt;/p&gt;
&lt;p&gt;A partir de um estado "n√£o gerenciado", os arquivos entram em um ciclo de altera√ß√µes de estado a cada modifica√ß√£o e posterior consolida√ß√£o.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Workflow GIT States" src="/images/states-git.png"&gt;&lt;/p&gt;
&lt;p&gt;Esses s√£o os conceitos iniciais do GIT, nos pr√≥ximos posts vamos executar a instala√ß√£o e fazer alguns commits e altera√ß√µes.&lt;/p&gt;
&lt;p&gt;Simples Assim üòÜ&lt;/p&gt;
&lt;p&gt;&lt;a href="http://git-scm.com/book/pt-br"&gt;Fonte&lt;/a&gt;&lt;/p&gt;</content><category term="DevOps"></category><category term="git"></category></entry></feed>